<?php
/*
 * TinyWebDirectory
 * Created Feburary 24, 2013
 * 
 * Copyright (c) 2013, SOAChishti (soachishti@outlook.com).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL SOAChishti BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

	 session_start(); # Starting Session

	/*----------------- SETTINGS start ----------------------------*/ 
	 
	# Database Setting start
	$host = "localhost"; # Datbase host
	$database = "tinywebdir"; # Database Name
	$username = "root"; # Database Username
	$password = ""; # Database Password
	# Database Setting end
	
	$title = "Tiny Web Directory"; # Title of Site.
	$limit = 10; # Limit for result per page Pagination.
	$page = "p";	# Url Parameter for pagination.
	$reciprocal = true; # True if reciproocal link is on.
	$site = "http://localhost.com"; # Site url.
	$reci_content = "Listed on: &lt;a href=&quot;$site&quot;&gt;link directory&lt;/a&gt;"; # Reciprocal Content for link own.
	
	/*----------------- SETTINGS end ----------------------------*/ 
	
	$content = $extra = "";

	if(!isset($_SESSION['admin']) || $_SESSION['admin'] != true)
	{
		$_SESSION['admin'] = false; # Session variable to admin authentication, If true allowed to login.
	}

    $path = "http://".$_SERVER["SERVER_NAME"].$_SERVER["SCRIPT_NAME"]; # Url to use in forms(action='??') or line 
    //Connecting to database
    $con = mysqli_connect($host,$username,$password,$database);
    if(mysqli_connect_errno())
    {
            printf("Connect failed: %s\n", mysqli_connect_error()); # If couldnt connect so print error.
            exit(); # Exist after printer error
    }

    // Installing database if file sql.txt exist in the directory.
    if(file_exists("sql.txt")) # Check whether file exist or not
    {
            $sql = file_get_contents("sql.txt"); # Get Content from the file.
            $result = mysqli_multi_query($con,$sql); # Execute SQL to the database.
            if($result)
            {
                    rename("sql.txt","sqlbackup"); # If database created so rename databse bakcup file to sqlbackup.
            }
    }

	// This will add link to the database with their information.
    if(isset($_POST['name']) && isset($_POST['link']) && isset($_POST['desc']) && isset($_POST['email']) && isset($_POST['rel']))
    {
            $url = parse_url($_POST['link'] , PHP_URL_HOST); # Parsing url host.
            if(
            preg_match('#[a-z0-9\-\ ]#',$_POST['name']) && # Checking if name only contain alphabets or numeric or spaces
            preg_match('#[a-z0-9\-\ ]#',$_POST['desc']) &&	# Check if description contain alphabets or numeric or spaces
            filter_var($_POST['email'], FILTER_VALIDATE_EMAIL) && # Validating email with php function.
            is_numeric($_POST['rel']) && # This variable will be generated by form and this must be numeric.
            !empty($url) &&	# Check if Url variable is isnt empty.
            strlen($_POST['desc']) < 255 &&	# Check if description is less than 255 letters 
            strlen($_POST['name']) < 100 &&	# Check if name is less than 100 letters 
            strlen($_POST['link']) < 255 &&	# Check if link is less than 255 letters 
            strlen($_POST['email']) < 150	# Check if email is less than 150 letters 
            )  # If Everything is correct.
            {
				$approve = 0; # Links are not approved.
				if($reciprocal == true && isset($_POST['reciprocal']) && isset($_POST['reciprocal_link'])) # if reciprocal link is on.
				{
					$content = file_get_contents($_POST['reciprocal_link']); # Fetch site source code.
					$check = stripos($content,htmlspecialchars_decode($reci_content)); #If reciprocal content exist.
					if($check == true)
					{
						$approve = 1; #If reciprocal content exist approve the link.
					}
				}
					# Creating query to to check whether if link already exist or not.
                    $sql = sprintf("SELECT link FROM link WHERE link = '%s'", mysqli_real_escape_string($con,$_POST['link'])); 
                    $result = mysqli_query($con,$sql); # Executing Query
                    $count = mysqli_num_rows($result); # Checking if the link exists or not.
                    if($count == 0)	# If doesnt exist so add it to database.
                    {
							# Creating Query to add link to the database.
                            $sql = sprintf("INSERT INTO `link`(`link`,`name`, `desc`, `rel_id`, `email`, `approve`) VALUES ('%s','%s','%s','%s','%s',%s)", 
                                    mysqli_real_escape_string($con,$_POST['link']),
                                    mysqli_real_escape_string($con,$_POST['name']),
                                    mysqli_real_escape_string($con,$_POST['desc']),
                                    $_POST['rel'],
                                    mysqli_real_escape_string($con,$_POST['email']),
                                    $approve
                                    );   
                            $result = mysqli_query($con,$sql); # Executing the query.
                            if($result == true && $approve == 1)
                            {
                                    $extra .= "Your Link <a href='" . htmlspecialchars($_POST['link']) . "'>". htmlspecialchars($_POST['link']) ."</a> Added";
                            }
							else
							{
								$extra .= "Your Link <a href='" . htmlspecialchars($_POST['link']) . "'>". htmlspecialchars($_POST['link']) ."</a> will be approved soon.";
							}
                    }
                    else # if link already exist in the database, Thank the person for taking interest.
                    {
                            $extra .= "Thank for your help link was already added";
                    }
            }
    }


	# Person is logged in and $_POST['action'] exists then
    if(isset($_POST['action']) && $_SESSION['admin'] == true)
    {
			# Checking what to do.
            switch($_POST['action'])
            {
								
                    case 'Add Category': # Addding category to the database
                    # Spliting the $_POST['cats'] variable to identify categroies indivisually.
                    $array = preg_split('#\n#',$_POST['cats']);
					# Adding the Categories one by one to the database.
                    foreach($array as $value)
                    {
                        $value = trim($value); # trimming the category
						$sql = "SELECT name FROM category WHERE name = '$value';"; # Query to Check whether category already exist or not.
						$result = mysqli_query($con,$sql);
						if(mysqli_num_rows($result) == 0) # If doesnt exists so add it to database.
						{							
                            $sql = "INSERT INTO category(`name`) VALUES ('$value')"; # Query for adding category to the category table in database.
                            $result = mysqli_query($con,$sql);
                            $id = mysqli_insert_id($con); 
							# Query for adding category to the category table in database.
                            $sql = "INSERT INTO relation(`cat_id`,`child_id`) VALUES ('$id','$id')";
                            $result = mysqli_query($con,$sql);
                            if($result)
                            {
                                    $extra .= $value . " Added<br />";
                            }
						}	
						else
						{
							$extra .= $value . " Already Exists<br />";
						}			
                    }
                    
                    break;
					
                    case 'Add Child': # Adding sub category to the category.
                    
					$catid = trim($_POST['catid']);  # Catgory id.
					# Spliting the $_POST['cats'] variable to identify categroies indivisually.
                    $array = preg_split('#\n#',$_POST['cats']); 
					# Adding the sub categories one by one to the category in  database.
                    foreach($array as $value)
                    {
						$sql = "SELECT name FROM category WHERE name = '$value';"; # Query to Check whether category already exist or not.
						$result = mysqli_query($con,$sql);
						if(mysqli_num_rows($result) == 0) # If doesnt exists so add it to database.
						{		
                            $value = trim($value); # trimming the sub category
                            $sql = "INSERT INTO category(`name`) VALUES ('$value')";
                            $result = mysqli_query($con,$sql);
                            $id = mysqli_insert_id($con);
                            $sql = "INSERT INTO relation(`cat_id`,`child_id`) VALUES ('$catid','$id')";
                            $result = mysqli_query($con,$sql);
                            if($result)
                            {
                                    $extra .= $value . " Added<br />";
                            }
						}	
						else # If Category already exist print message.
						{
							$extra .= $value . " Already Exists<br />";
						}
                    }
					
					break;
            }
    }

	# For Login Administrator, If name and pass are correct so update $_SESSION['admin'] to true
    if(isset($_POST['name']) && isset($_POST['pass']) && $_POST['name'] == "admin" && $_POST['pass'] == "admin")
    {
        $_SESSION['admin'] = true; # If True Allow admin functions.
    }
			
			
	# Action which can be performed without logging in. 
    if(isset($_GET['action']))
    {
		switch($_GET['action'])
        {
			# If admin wants to logout so $_SESSION['admin'] variable will be updated here to false
			case 'logout':
				$extra .= "You have succesfully Logged Out - <a href='$path'>Go Back</a>";
				$_SESSION['admin'] = false;
			break;
				
			# If User want to add url they will reach here.
			case 'suggest':
				# If person try to add url from front page where no links can exist.
				# If person is redirected from category page so they will go here.
				if(isset($_GET['rel']))
				{
					$extra .="
					<form action='{$path}' method='post'>
					Name:<br /><input type='text' name='name'><br />
					Url:<br /><input type='text' name='link'><br />
					Description:<br /><textarea rows='10' cols='50' name='desc'></textarea><br />
					Email:<br /><input type='text' name='email'><br />";
					if($reciprocal == true)
					{
						$extra .= "Reciprocal Content:<br /><textarea rows='10' cols='50' name='reciprocal'>$reci_content</textarea><br />";
						$extra .= "Reciprocal Link:<br /><input type='text' name='reciprocal_link'><br />";
					}
					$extra .= "
					<input type='hidden' name='rel' value='{$_GET['rel']}'>
					<input type='submit' value='Submit'>
					</form>";
				}
				else
				{
					# If person click on suggest url from front page, Then this message will be given to them.
					$extra .= "Open the Category and then click Suggest Url";
				}

			break;
			
			# Login form for administrator.
			case 'login':
				 $extra .="
                    <form action='{$path}' method='post'>
                    User:<br /><input type='text' name='name'><br />
                    Pass:<br /><input type='password' name='pass'><br />
                    <input type='hidden' name='action' value='login'>
                    <input type='submit' value='Submit'>
                    </form>
                    ";	
			break;
		}
		
		# Those action which admin can perform.
		if($_SESSION['admin'] == true)
		{
            switch($_GET['action'])
            {
					# Viewing all link in database.
					case 'link':
					
						  # Stuff for Pagination of links.
						$sql = "
							SELECT l.id, l.name, l.approve, l.rel_id, l.email, l.desc, c.name as category
							FROM link as l, relation as r, category as c 
							WHERE l.rel_id = r.id AND r.child_id = c.id";
						$result = mysqli_query($con,$sql);
						$count = mysqli_num_rows($result);
						$current = (isset($_GET[$page])) ? $_GET[$page] : 0 ;
						$possible = $count/$limit;	

						# Query to output data.
						$sql = "
							SELECT l.id, l.name, l.approve, l.rel_id, l.email, l.desc, c.name as category
							FROM link as l, relation as r, category as c 
							WHERE l.rel_id = r.id AND r.child_id = c.id
							LIMIT ".$current * $limit.",{$limit}";
							
							
						# Executing Query	
						$result = mysqli_query($con,$sql);
						$extra .= "
							<table border='1'>
							<tr>
							<th>ID</th>
							<th>Name</th>
							<th>Email</th>
							<th>Desc</th>
							<th>Category</th>
							<th>Action</th>
							</tr>";
						# Printing Links into html table.	
						while($row = mysqli_fetch_assoc($result))
						{
							$extra .= "
									<tr>
									<td>" . $row['id'] . "</td>
									<td>" . $row['name'] . "</td>
									<td>" . $row['email'] . "</td>
									<td>" . $row['desc'] . "</td>
									<td>" . $row['category'] . "</td>";
									
									if($row['approve'] != '1')
									{
										$extra .= "<td><a href='?cat={$row['id']}&rel_id={$row['rel_id']}&action=Approve'>APPROVE</a></td>";
									}
									else
									{
										$extra .= "<td><a class='red' href='?cat={$row['id']}&rel_id={$row['rel_id']}&action=CatDel'>DELETE</a></td>";
									}
									$extra .= "</tr>";
						}
						$extra .= pagination($current,$possible,$page);	
						$extra .= "</table>"; 
					break;
					
					# If Admin click to delete a link.					
                    case 'DelLink':
							# Check if link exist in $_GET['link']
                            if(isset($_GET['link']))
                            {
								# Query for deleting Link.	
								$sql = "DELETE FROM link WHERE id={$_GET['link']}";
                                $result = mysqli_query($con,$sql); # Executing Query.
                                if($result)
                                {
									# Message for Admin
                                    $extra .="Link Deleted - <a href='?cat={$_GET['cat']}'>Go Back</a>";
                                }
                            }
                    break;
					
					# If admin click link to approve
					case 'Approve':
							# Query for updating link.
							$sql = " UPDATE link SET approve='1' WHERE id = '{$_GET['cat']}';";
                            # Executing Query.
							$result = mysqli_query($con,$sql);
                            if($result)
                            {
								# Message for Admin .
                                 $extra .= "Link Approved - <a href='?action=link'>Go Back</a>";
                            }
                    break;
					
					#If Person click delete button on category page.
                    case 'CatDel':
                            if(isset($_GET['cat']))
                            {
									# Query for deleting category and their foot print from other tables.
                                    $sql = "
                                    DELETE FROM category WHERE id = {$_GET['cat']};
                                    DELETE FROM relation WHERE cat_id = {$_GET['cat']} OR child_id = {$_GET['cat']};
                                    DELETE FROM link WHERE rel_id = {$_GET['rel_id']};
                                    ";
									# Executing Query to database
                                    $result = mysqli_multi_query($con,$sql);
                                    if($result)
                                    {
										# Message for Admin.
                                        $extra .="Category Deleted<br />";
                                        $extra .="<a href='?cat=".$_SESSION['pprev_cat']."'>Go Back</a> | ";
                                    }
                            }
                    break;
					
					# If person click to update Category
                    case 'CatEdit':
							# Check if Category ID exist in $_GET['cat']
                            if(isset($_GET['cat']))
                            {		
								# Print form for admin.
                                    $extra .="
                                    <form action='{$path}' method='get'>
                                    Name:<br /><input type='text' name='catname'><br />
                                    <input type='hidden' name='catid' value='{$_GET['cat']}'>
                                    <input type='hidden' name='action' value='CatEdit'>
                                    <input type='submit' value='Submit'>
                                    </form>
                                    ";
                            }
							# Check if catname exist in $_GET['catname'] so pepare to delete it.
                            if(isset($_GET['catname']))
                            {
									# Query for updating category.
                                    $sql = "
                                    UPDATE category SET name='{$_GET['catname']}' WHERE id = '{$_GET['catid']}';
                                    ";
                                    $result = mysqli_query($con,$sql);
                                    if($result)
                                    {
											# Message for Admin.
                                            $extra .="Category Updated<br />";
                                            $extra .="<a href='?cat=".$_SESSION['prev_cat']."'>Go Back</a> | ";
                                    }
                            }
                    break;
            }
		}
    }



    //Start of the Code
    //Check if cat value exist in GET variable.
    if(isset($_GET['cat']))
    {
		if(empty($extra))
		{
            $cat = $_GET['cat'];   # Put cat value from GET variable to cat varible.

            # If any catergory is already visit so that caterogry id will be stored in $_SESSION['prev_cat'].
            if(isset($_SESSION['prev_cat']))
            {
                    $prev_cat = $_SESSION['prev_cat']; 
                    if($cat != $prev_cat) #if Current catergory id is noy equal to previous category id ($prev_cat).
                    {
                            $_SESSION['prev_cat'] = $cat;
                            $_SESSION['pprev_cat'] = $prev_cat;
                    }
                    else #if Current catergory id is equal to previous category id ($prev_cat).
                    {
                            $prev_cat = $_SESSION['pprev_cat'];
                    }
            }
            else # If no category is yet visited so create varible to store current category id.
            {
                    unset($_SESSION['pprev_cat']);
                    $prev_cat = $_SESSION['pprev_cat'] = $_SESSION['prev_cat'] = $cat; 
            }
            
            # Query for relation id of the current category.
            $sql = "SELECT id FROM relation WHERE (cat_id = '{$cat}' AND child_id = '{$prev_cat}') OR (cat_id = '{$prev_cat}' AND child_id = '{$cat}')";
            $result = mysqli_query($con,$sql);
            $row = mysqli_fetch_assoc($result);
            $rel = $row['id']; # Store relation id of current url to variable $rel.
            
            # Query to check whether the cateogry exist or not.
            $sql = "SELECT name     FROM category WHERE id = $cat";
            $result = mysqli_query($con,$sql);
            $row = mysqli_fetch_assoc($result);
            # Check if Category exist or not.
            if(mysqli_num_rows($result) != 0)
            {
                    $category = $row['name'];  # Put the name of the category to $category variable
                    
                    // Creating Breadcrumb (navigation) of the categorys.
                    $nav = '';  
                    $navi = "<a href='{$path}'>Top</a> | ";
                    $finish = false;
                    # Get parent of the current category.
                    while($finish == false)
                    {
                            $cats = isset($cats) ? $cats : $cat;
                            # Query for the parent category of the current category($cat).
                            $sql = "SELECT c.name,c.id,r.id AS rel_id
                            FROM relation AS r,category AS c
                            WHERE r.child_id = {$cats} AND r.cat_id = c.id AND r.cat_id != r.child_id";
                            
                            $result = mysqli_query($con,$sql);
                            // If parent category exists.
                            if(mysqli_num_rows($result) != 0)
                            {
                                    $row = mysqli_fetch_assoc($result); // Fetch the results.
                                    $cats = $row['id']; //Put the cateogry id to $cat variable
                                    $nav[] .= "<a href='?cat={$row['id']}'>{$row['name']}</a>"; # Create link of parent category for breadcrumb.
                            }
                            else // If parent doesnt category exists so stop the loop.
                            {
                                    $finish = true;
                            }       
                    }
            
                    // Arranging the Breadcrumb and adding - between all categories.
                    if(is_array($nav))
                    {
                            $nav = array_reverse($nav, true);
                            foreach($nav as $value) {
                                    $navi .= $value . ' - ';
                            }
                    }
                    
                    
                    $content .="<div class='main'>";
                    $navi .= $category; // Put current $category to Breadcrumb at the end
                    $content .="<div class='title'><h3>".$category . " - " . $title. "</h3></div>"; # Print Name of the Category.
                    
                    $content .="<div class='container1'>";
                    $content .="<div class='breadcrumb'>" . $navi . "</div>"; // print out the Breadcrumb
                    # Link for user to suggest url for the current category.
                    $content .= "<div class='suggest'>"; 
					if($_SESSION['admin'] == true)
					{
						$content .= "<a href='?action=link'>Edit Links</a>&nbsp;&nbsp;&nbsp;";
						$content .= "<a href='?action=logout'>Logout</a>&nbsp;&nbsp;&nbsp;";
					}
					else
					{
						$content .= "<a href='?action=login'>Login</a>&nbsp;&nbsp;&nbsp;";
					}
					$content .= "<a href='?action=suggest&rel={$rel}'>Suggest Url</a>"; 
                    $content .="</div>";
                    
                    
                    # if admin is logged in.
                    if($_SESSION['admin'] == true)
                    {
							$content .= "<div class='admin_tool'>"; 
                            # Link to delete the current category.
                            $content .="<a href='?cat={$cat}&rel_id={$rel}&action=CatDel'>DELETE THIS CATEGORY</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;";
                            # Link to Edit the current category.
                            $content .="<a href='?cat={$cat}&action=CatEdit'>EDIT THIS CATEGORY</a><br />";
                            # Link to Add sub cateogry to current category.
                            $content .="
                            <form action='{$path}' method='post'>
                            Add Category (One Per Line):<br /><textarea name='cats'></textarea><br />
                            <input type='hidden' name='catid' value='{$cat}'>
                            <input type='submit' name='action' value='Add Child'>
                            </form>
                            </div>
                            ";
                    }
                    
                    // Query for the sub category of the current category. 
                    $sql = "
                    SELECT c.name, c.id, r.child_id, r.id AS rel_id
                    FROM category AS c, relation AS r
                    WHERE c.id = r.child_id AND r.cat_id = {$cat} AND r.cat_id != r.child_id
                    ORDER BY c.name ASC 
                    ";
            
                    $result = mysqli_query($con,$sql);
                    if($result){    
                            if(mysqli_num_rows($result) != 0)
                            {
                            $content .="<div class='category'>";
                            while($row = mysqli_fetch_assoc($result))
                            {
                                    # Printing the sub category of current category.
                                    $content .="<div class='sub'><a href='?cat={$row['id']}'>{$row['name']}</a><br /></div>";
                            }
                            $content .="</div>";
                            }
                            else
                            {
                                    $content .="<div class='category'>";
                                    $content .="<p><b>No Category Exists</b></p>";
                                    $content .="</div>";
                            }
                    }
                    
                    # Stuff for Pagination of links.
                    $sql = "SELECT l . * 
						FROM relation AS r, link AS l
						WHERE r.child_id = {$cat}
						AND r.id = l.rel_id";
					$result = mysqli_query($con,$sql);
					$count = mysqli_num_rows($result);
					$current = (isset($_GET[$page])) ? $_GET[$page] : 0 ;
					$possible = $count/$limit;	
					
                    //Query for the link added in the current category.
                    $sql = "
                    SELECT l . * 
                    FROM relation AS r, link AS l
                    WHERE r.child_id = {$cat}
                    AND r.id = l.rel_id
					LIMIT ".$current * $limit.",{$limit}";

                    $result = mysqli_query($con,$sql);
                    if($result){
                            //Priting the url in this category.
                            $content .="<div class='linksbox'>";
							if(mysqli_num_rows($result) != 0)
							{
								while($row = mysqli_fetch_assoc($result))
								{
							
                                    $content .="<div class='links'>";
                                    //Link of the url added in this category
                                    $content .="<a title='{$row['name']}' href='{$row['link']}'>{$row['name']}</a> - " . $row['desc'];
                                    //If Person is logged in so adding link to delete the url
                                    if($_SESSION['admin'] == true)
                                    {
                                            $content .=" - <a class='del' href=?action=DelLink&link='{$row['id']}&cat={$cat}'>Delete</a>";
                                    }
                                    $content .="</div>";									
								}
								$content .= pagination($current,$possible,$page);	
								$content .='</div>';
							}
							else
							{
								$content .="<div class='category'>";
                                $content .="<p><b>No link exist in this Category</b></p>";
                                $content .="</div>";
							}
					
                            $content .="<div class='searchfor'>Search for <b>" . $category . "</b> on  
                            <a href='http://search.aol.com/aol/search?query=$category'>AOL</a> -
                            <a href='http://search.ask.com/web?q=$category'>Ask</a> -
                            <a href='http://www.bing.com/search?q=$category'>Bing</a> -
                            <a href='http://gigablast.com/search?q=$category'>Gigablast</a> -
                            <a href='http://www.google.com/search?q=$category'>Google</a> -
                            <a href='http://search.lycos.com/?query=$category'>Lycos</a> -
                            <a href='http://search.yahoo.com/bin/search?p=$category'>Yahoo</a> -
                            <a href='http://search.yippy.com/search?query=$category'>Yippy</a></div>"; 
                    }
                    $content .="</div>";
            }
            else # If category doesnt exist so exist and print message.
            {
                    $content .="Category Doesnt Exists";
            }
		}
    }
    else 
    {
		if(empty($extra))
		{
            $content .="<div class='main'>";
            $content .="<div class='title'><h3>$title</h3></div>"; # Print Name of the Category.
                    
            $content .="<div class='container1'>";
            $content .="<div class='breadcrumb'><a href='{$path}'>Top</a></div>"; // print out the Breadcrumb
            # Link for user to suggest url for the current category.
			$content .= "<div class='suggest'>"; 
			if($_SESSION['admin'] == true)
			{
				$content .= "<a href='?action=link'>Edit Links</a>&nbsp;&nbsp;&nbsp;";
				$content .= "<a href='?action=logout'>Logout</a>&nbsp;&nbsp;&nbsp;";
			}
			else
			{
				$content .= "<a href='?action=login'>Login</a>&nbsp;&nbsp;&nbsp;";
			}
			$content .= "<a href='?action=suggest'>Suggest Url</a></div>";   
            $content .="</div>";
                    
            
            // If Person is logged in.
            if($_SESSION['admin'] == true)
            {
                    // Print a form so that admin can add category.
                    $content .="
					<div class='admin_tool'>
                    <form action='{$path}' method='post'>
                    Add Category (One Per Line):<br /><textarea name='cats'></textarea><br />
                    <input type='submit' name='action' value='Add Category'>
                    </form>
					</div>
                    ";
            }
            
            # Query for the parent categories 
            $sql = "
            SELECT c.name, c.id, r.child_id, r.id AS rel_id
            FROM category AS c, relation AS r
            WHERE cat_id = c.id AND cat_id = r.child_id
            ORDER BY c.name ASC 
            ";
            $result = mysqli_query($con,$sql);
            if($result){
                    $content .="<div class='category'>";
                    while($row = mysqli_fetch_assoc($result))
                    {
                            // Printing the categoriess
                            $content .="<div class='sub'><a href='?cat={$row['id']}'>{$row['name']}</a><br /></div>";
                    }
                    $content .="</div>";
            }
            unset($_SESSION['prev_cat']);
            $content .="</div>";
		}
    }
    mysqli_close($con);

	#Pagination Function --- Start
	function pagination($current,$possible,$page,$out = '')
	{	
		if($current <= $possible)
		{
			if($current+1 <= $possible)
			{
				$next = $current+1;
				$out .= "<br /><a href='?$page=" . $next . ">Next</a>";	
			}
			if($current >= 1)
			{
				$prev = $current-1;
				$out .= "<br /><a href='?$page=". $prev . ">Previous</a>";		
			}
		}
		else
		{
			$out .= "<br /><a href='?$page=". $possible . ">Previous</a>";
		}	
		return $out;
	}
	#Pagination Function --- End
	?>

<!DOCTYPE html>
<html lang="en-US">
<head>
<meta name="keywords" content="" />
<meta name="description" content="" />

<title><?php echo (isset($category)) ? $title." - ".$category : $title ; ?></title>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<style>
* {
        margin: 0px;
        padding: 0px;
}
body {
        border: 1px solid black;
		margin:10px;
        width:600px;
        float:left;
}
.title, .searchfor, .container1, .linksbox, .category, .main, .admin_tool, .footer{ 
        margin:10px 0px 10px 0px;
        width:600px;
        float:left;
}
.sub {  
        float:left;
        width:150px;
}
.container1 {   
        border-top:1px solid black;
		border-bottom:1px solid black;
}
.searchfor {    
        border-top:1px solid black;
		border-bottom:1px solid black;
}       
.category {     
		border-top:1px solid black;
		border-bottom:1px solid black;
}       
.linksbox {     
        border-top:1px solid black;
		border-bottom:1px solid black;
}
.suggest {      
		text-align:right;
        float:right;
        width:200px;
}
div.breadcrumb {
        float:left;
        width:390px;
}
.del, .red {  
        color:red;
}       
p {
        margin:10px 0px 10px 0px;
}       
h3 {
        font-size:26px;
        font-weight: bold bold;
}
div.links {    
		padding:10px;
        margin:5px 0px 5px 0px;
        border-top:1px solid black;
		border-bottom:1px solid black;
}
.admin_tool {

		border-top:1px solid black;
		border-bottom:1px solid black;
}
textarea {
		width: 250px;
		height: 70px;
}
a {
		text-decoration:none;
}
</style>	
</head>
<body>
<?php 
if(empty($extra))
{
	echo $content;
}
else
{
	$extras = "<div class='main'><div class='admin_tool'>";
    $extras .= "<div class='title'><h3>$title</h3></div>"; # Print Name of the Category.
    $extras .= "<div class='container1'>";
    $extras .= "<div class='breadcrumb'><a href='{$path}'>Top</a></div>"; 
	$extras .= "<div class='suggest'>"; 
	if($_SESSION['admin'] == true)
	{
		$extras .= "<a href='?action=link'>Edit Links</a>&nbsp;&nbsp;&nbsp;";
		$extras .= "<a href='?action=logout'>Logout</a>&nbsp;&nbsp;&nbsp;";
	}
	else
	{
		$extras .= "<a href='?action=login'>Login</a>&nbsp;&nbsp;&nbsp;";
	}
	$extras .= "<a href='?action=suggest'>Suggest Url</a></div>"; 
    $extras .= "</div>";
    $extras .= "</div>";
    $extra = $extras . $extra . "</div>";
	echo $extra;
}
?>
<div class='footer'>&copy; TinyWebDirectory 2013</div>
</body>
</html>

<?php unset($content); ?>